{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/unittype.js\";\nimport React, { Component } from \"react\";\nimport Fisrtunit from \"./inputunit\";\nimport Secoundunit from \"./inputunit\";\nimport Typeunits from \"./inputunit\";\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nexport default class unittype extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUnit = async event => {\n      await this.setState({\n        unit: event.target.value\n      });\n      var unitObject1 = {\n        type1: this.state.unit\n      };\n      APIcall.getunits(unitObject1).then(res => {\n        this.setState({\n          type: res.data.data.unittype,\n          typeunit: res.data.data.units\n        });\n      });\n    };\n\n    this.state = {\n      unit: \"\",\n      typeunit: [],\n      type: []\n    };\n  }\n\n  componentWillMount() {\n    APIcall.gettype().then(res => {\n      this.setState({\n        type: res.data.type\n      });\n    });\n  }\n\n  render() {\n    const unitfield = this.state.type.map((value, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, value);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"SelectUnit\",\n      value: this.state.key,\n      onChange: this.getUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Select Type \"), unitfield), React.createElement(Typeunits, {\n      typeunit: this.state.typeunit,\n      unit: this.state.unit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/unittype.js"],"names":["React","Component","Fisrtunit","Secoundunit","Typeunits","APIcall","require","unittype","constructor","props","getUnit","event","setState","unit","target","value","unitObject1","type1","state","getunits","then","res","type","data","typeunit","units","componentWillMount","gettype","render","unitfield","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAArB;;AAEA,eAAe,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC9CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,OARmB,GAQT,MAAMC,KAAN,IAAe;AACvB,YAAM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd,CAAN;AAEA,UAAIC,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWL;AADF,OAAlB;AAGAR,MAAAA,OAAO,CAACc,QAAR,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAmCC,GAAG,IAAI;AACxC,aAAKT,QAAL,CAAc;AACZU,UAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAchB,QADR;AAEZiB,UAAAA,QAAQ,EAAEH,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcE;AAFZ,SAAd;AAKD,OAND;AAQD,KAtBkB;;AAEjB,SAAKP,KAAL,GAAa;AACbL,MAAAA,IAAI,EAAE,EADO;AAEbW,MAAAA,QAAQ,EAAE,EAFG;AAGbF,MAAAA,IAAI,EAAC;AAHQ,KAAb;AAKH;;AAiBGI,EAAAA,kBAAkB,GAAE;AACpBrB,IAAAA,OAAO,CAACsB,OAAR,GAAkBP,IAAlB,CAAuBC,GAAG,IAAI;AAC1B,WAAKT,QAAL,CAAc;AACZU,QAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASD;AADH,OAAd;AAGH,KAJD;AAMC;;AACHM,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKX,KAAL,CAAWI,IAAX,CAAgBQ,GAAhB,CAAoB,CAACf,KAAD,EAAOgB,GAAP,KAAa;AACjD,aACE;AAAQ,QAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBhB,KAAnB,CADF;AAGF,KAJkB,CAAlB;AAKF,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWa,GAA1C;AAA+C,MAAA,QAAQ,EAAE,KAAKrB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGmB,SAFH,CADF,EAKE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAI,KAAKX,KAAL,CAAWM,QAAlC;AAA4C,MAAA,IAAI,EAAI,KAAKN,KAAL,CAAWL,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF;AAUD;;AAjD6C","sourcesContent":["import React, { Component } from \"react\";\nimport Fisrtunit from \"./inputunit\";\nimport Secoundunit from \"./inputunit\";\nimport Typeunits from \"./inputunit\";\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nexport default class unittype extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    unit: \"\",\n    typeunit: [],\n    type:[]\n  }\n};\n  getUnit = async event => {\n    await this.setState({ unit: event.target.value });\n\n    var unitObject1 = {\n      type1: this.state.unit\n    };\n    APIcall.getunits(unitObject1).then(res => {\n      this.setState({ \n        type :res.data.data.unittype, \n        typeunit: res.data.data.units\n      });\n     \n    });\n    \n  };\n\n    componentWillMount(){\n    APIcall.gettype().then(res => {\n        this.setState({ \n          type :res.data.type, \n      })\n    })\n\n    }\n  render() {\n      const unitfield = this.state.type.map((value,key)=>{\n        return(\n          <option key={key}>{value}</option>\n        )\n     })\n    return (\n      \n      <div>\n        <select id=\"SelectUnit\" value={this.state.key} onChange={this.getUnit}>\n          <option value=\"N/A\">Select Type </option>\n          {unitfield}\n        </select>\n        <Typeunits typeunit = {this.state.typeunit} unit = {this.state.unit}  />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}