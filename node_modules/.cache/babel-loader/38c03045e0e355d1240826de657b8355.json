{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/unittype.js\";\nimport React, { Component } from \"react\";\nimport Fisrtunit from \"./inputunit\";\nimport Secoundunit from \"./inputunit\";\nimport Typeunits from \"./inputunit\";\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nexport default class unittype extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUnit = async event => {\n      await this.setState({\n        unit: event.target.value\n      }); // console.log(\"unittype========>\", this.state.unit);\n      // var unitType = {\n      //   type1: this.state.unit\n      // };\n      // console.log(\"unitype onject------->\", unitType);\n      // APIcall.getunits(unitType).then(res => {\n      //   console.log(res);\n      // });\n\n      var unitObject1 = {\n        type1: this.state.unit\n      };\n      console.log(\"unitype onject------->\", unitObject1);\n      APIcall.getunits(unitObject1).then(res => {\n        console.log(\"sdfgHJ\", res.data.data.unittype);\n        this.setState({\n          type: res.data.data.unittype,\n          typeunit: res.data.data.units\n        }, () => console.log(\"unittypeeeeeeeeeeeeeeee\", this.state.typeunit));\n      });\n    };\n\n    this.state = {\n      unit: \"\",\n      typeunit: [],\n      type: []\n    };\n  }\n\n  componentWillMount() {// var unitObject1 = {\n    //   type1: this.state.unit\n    // };\n    // console.log(\"unitype onject------->\", unitObject1);\n    // APIcall.getunits(unitObject1).then(res => {\n    //   console.log(\"sdfgHJ\",res.data.data.unittype);\n    //   this.setState({ \n    //     type :res.data.data.unittype, \n    //     typeunit: res.data.data.units\n    //   },()=> console.log(\"unittypeeeeeeeeeeeeeeee\", this.state.typeunit));\n    // });\n    //   const unitfield = this.state.type.map((value,key)=>{\n    //     return(\n    //       <option key={key}>{value}</option>\n    //     )\n    //  })\n  }\n\n  render() {\n    console.log(\"in render----=>\", this.state.type);\n    const unitfield = this.state.type.map((value, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, value);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"SelectUnit\",\n      value: this.state.unit,\n      onChange: this.getUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Select Type \"), React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"this.state.\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"VOLUME\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"MASS\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"TEMPERATURE\")), React.createElement(Typeunits, {\n      typeunit: this.state.typeunit,\n      unit: this.state.unit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/unittype.js"],"names":["React","Component","Fisrtunit","Secoundunit","Typeunits","APIcall","require","unittype","constructor","props","getUnit","event","setState","unit","target","value","unitObject1","type1","state","console","log","getunits","then","res","data","type","typeunit","units","componentWillMount","render","unitfield","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Fisrtunit from \"./inputunit\";\nimport Secoundunit from \"./inputunit\";\nimport Typeunits from \"./inputunit\";\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nexport default class unittype extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    unit: \"\",\n    typeunit: [],\n    type:[]\n  }\n};\n  getUnit = async event => {\n    await this.setState({ unit: event.target.value });\n    // console.log(\"unittype========>\", this.state.unit);\n    // var unitType = {\n    //   type1: this.state.unit\n    // };\n    // console.log(\"unitype onject------->\", unitType);\n    // APIcall.getunits(unitType).then(res => {\n    //   console.log(res);\n    // });\n\n    var unitObject1 = {\n      type1: this.state.unit\n    };\n    console.log(\"unitype onject------->\", unitObject1);\n    APIcall.getunits(unitObject1).then(res => {\n      console.log(\"sdfgHJ\",res.data.data.unittype);\n      this.setState({ \n        type :res.data.data.unittype, \n        typeunit: res.data.data.units\n      },()=> console.log(\"unittypeeeeeeeeeeeeeeee\", this.state.typeunit));\n     \n    });\n    \n  };\n\n    componentWillMount(){\n      // var unitObject1 = {\n      //   type1: this.state.unit\n      // };\n      // console.log(\"unitype onject------->\", unitObject1);\n      // APIcall.getunits(unitObject1).then(res => {\n      //   console.log(\"sdfgHJ\",res.data.data.unittype);\n      //   this.setState({ \n      //     type :res.data.data.unittype, \n      //     typeunit: res.data.data.units\n      //   },()=> console.log(\"unittypeeeeeeeeeeeeeeee\", this.state.typeunit));\n       \n      // });\n    //   const unitfield = this.state.type.map((value,key)=>{\n    //     return(\n    //       <option key={key}>{value}</option>\n    //     )\n    //  })\n\n    }\n  render() {\n      console.log(\"in render----=>\",this.state.type);\n      const unitfield = this.state.type.map((value,key)=>{\n        return(\n          <option key={key}>{value}</option>\n        )\n     })\n    return (\n      \n      <div>\n        <select id=\"SelectUnit\" value={this.state.unit} onChange={this.getUnit}>\n          <option value=\"N/A\">Select Type </option>\n          <option value=\"0\">this.state.</option>\n          <option value=\"1\">VOLUME</option>\n          <option value=\"2\">MASS</option>\n          <option value=\"3\">TEMPERATURE</option>\n          {/* {unitfield} */}\n        </select>\n        <Typeunits typeunit = {this.state.typeunit} unit = {this.state.unit}  />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}