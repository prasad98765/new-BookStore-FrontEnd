{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/FrontPage/BookStoreFirstPage.jsx\";\nimport React, { Component } from \"react\";\nimport ListOfBooks from \"../dashboard/listOfBooks\";\nimport TopBar from \"../topbar/navbar\";\nimport Sorting from \"../dropDownSorting/dropdown\";\nimport { withRouter } from 'react-router-dom';\n\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\n\nclass BookStoreFirstPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = async data => {\n      this.setState({\n        ALLBOOKS: []\n      });\n      this.setState({\n        ALLBOOKS: data\n      });\n\n      if (data == \"a\") {\n        this.setState({\n          search: false\n        });\n      }\n    };\n\n    this.handleChange = async (event, value) => {\n      await this.setState({\n        page: value\n      });\n      this.allBooks();\n      this.getSorting();\n    };\n\n    this.addToCart = value => {\n      if (!this.state.addToCart) {\n        this.props.history.push({\n          pathname: '/error'\n        });\n      } else {\n        this.props.history.push({\n          pathname: '/addToCart',\n          state: this.state.addToCart\n        });\n      }\n    };\n\n    this.login = value => {\n      this.props.history.push({\n        pathname: '/login',\n        state: this.state.addToCart\n      });\n    };\n\n    this.homepage = value => {\n      this.props.history.push({\n        pathname: '/'\n      });\n    };\n\n    this.getBookToaddToCart = value => {\n      this.setState({\n        addToCart: value\n      });\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.getBookToWishList = value => {\n      this.setState({\n        addToWishList: value\n      });\n      this.setState({\n        wishCount: this.setState.wishCount + 1\n      });\n    };\n\n    this.getSorting = async data => {\n      APIcall.getSortData({\n        field: this.state.sortfield || data,\n        page: this.state.page\n      }).then(async res => {\n        this.setState({\n          ALLBOOKS: []\n        });\n        await this.setState({\n          ALLBOOKS: res.data.data\n        });\n      });\n      await this.setState({\n        sortfield: data\n      });\n    };\n\n    this.state = {\n      sortfield: null,\n      page: 1,\n      ALLBOOKS: [],\n      noOfRecord: null,\n      addToCart: null,\n      count: 0,\n      wishCount: 0,\n      search: true\n    };\n  }\n\n  allBooks() {\n    APIcall.getAllBooks({\n      page: this.state.page\n    }).then(res => {\n      this.setState({\n        ALLBOOKS: res.data\n      });\n    });\n  }\n\n  getNoCount() {\n    APIcall.getNoOFBookCount().then(res => {\n      this.setState({\n        noOfRecord: res.data.data\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.allBooks();\n    this.getNoCount();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      bookList: this.state.ALLBOOKS,\n      value: this.handleSearch,\n      value1: this.addToCart,\n      count: this.state.count,\n      wishCount: this.state.wishCount,\n      login: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Sorting, {\n      bookList: this.state.ALLBOOKS,\n      bookcount: this.state.noOfRecord,\n      value: this.handleSorting,\n      page: this.state.page,\n      sort: this.getSorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.search ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"No books found\")), React.createElement(ListOfBooks, {\n      bookList: this.state.ALLBOOKS,\n      handleChange: this.handleChange,\n      getBookToaddToCart: this.getBookToaddToCart,\n      getBookToWishList: this.getBookToWishList,\n      noOfRecord: this.state.noOfRecord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(BookStoreFirstPage);","map":{"version":3,"sources":["/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/FrontPage/BookStoreFirstPage.jsx"],"names":["React","Component","ListOfBooks","TopBar","Sorting","withRouter","APIcall","require","BookStoreFirstPage","constructor","props","handleSearch","data","setState","ALLBOOKS","search","handleChange","event","value","page","allBooks","getSorting","addToCart","state","history","push","pathname","login","homepage","getBookToaddToCart","count","getBookToWishList","addToWishList","wishCount","getSortData","field","sortfield","then","res","noOfRecord","getAllBooks","getNoCount","getNoOFBookCount","componentWillMount","render","handleSorting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListOfBooks from \"../dashboard/listOfBooks\";\nimport TopBar from \"../topbar/navbar\";\nimport Sorting from \"../dropDownSorting/dropdown\";\nimport { withRouter } from 'react-router-dom';\n\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\nclass BookStoreFirstPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortfield : null,\n      page: 1,\n      ALLBOOKS: [],\n      noOfRecord: null,\n      addToCart : null,\n      count:0,\n      wishCount:0,\n      search:true\n    };\n  }\n\n  allBooks() {\n    APIcall.getAllBooks({ page: this.state.page }).then(res => {\n      this.setState({ ALLBOOKS: res.data });\n    });\n  }\n\n  getNoCount() {\n    APIcall.getNoOFBookCount().then(res => {\n      this.setState({ noOfRecord: res.data.data });\n    });\n  }\n\n  handleSearch = async data => {\n    this.setState({ ALLBOOKS: [] });\n    this.setState({ ALLBOOKS: data });\n    if(data==\"a\")\n    {      \n      this.setState({search:false})\n    }\n  };\n  handleChange = async (event, value) => {\n    await this.setState({ page: value });\n    this.allBooks();\n    this.getSorting()\n  };\n  componentWillMount() {\n    this.allBooks();\n    this.getNoCount();\n   \n  }\n  addToCart = (value) => {\n    if(!this.state.addToCart){\n      this.props.history.push( { pathname : '/error' })    \n    }else{\n    this.props.history.push( { pathname : '/addToCart', state: this.state.addToCart })\n    }\n  }\n  login = (value) =>{\n    this.props.history.push( { pathname : '/login', state: this.state.addToCart })\n  }\n  homepage = (value) => {\n    this.props.history.push( { pathname : '/' })\n  }\n  getBookToaddToCart = (value) => {\n    this.setState({ addToCart:value });\n    this.setState({ count:this.state.count +1  });\n  }\n  getBookToWishList=(value)=>{\n    this.setState({addToWishList:value});\n    this.setState({wishCount:this.setState.wishCount +1 })\n  }\n  getSorting = async (data) => {\n    APIcall.getSortData({field : (this.state.sortfield || data) , page : this.state.page}).then(async res => {\n      this.setState({ ALLBOOKS: [] });\n      await this.setState({ ALLBOOKS: res.data.data });\n    });\n    await this.setState({sortfield : data})\n  }\n\n  render() {\n    return (\n      <div>\n        <TopBar bookList={this.state.ALLBOOKS} value={this.handleSearch} value1 = {this.addToCart} count = {this.state.count} wishCount={this.state.wishCount} login ={this.login} />\n        <Sorting bookList={this.state.ALLBOOKS} bookcount = {this.state.noOfRecord} value={this.handleSorting} page = {this.state.page} sort = {this.getSorting}/>\n        {this.state.search?<div></div>:<div><h1>No books found</h1></div>}\n <ListOfBooks\n          bookList={this.state.ALLBOOKS}\n          handleChange={this.handleChange}\n          getBookToaddToCart={this.getBookToaddToCart}\n          getBookToWishList={this.getBookToWishList}\n          noOfRecord={this.state.noOfRecord}\n        />\n      </div>\n    );\n  }\n}\nexport default withRouter(BookStoreFirstPage);"]},"metadata":{},"sourceType":"module"}