{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/inputunit.js\";\nimport React, { Component } from \"react\";\n\nrequire(\"./unittype\");\n\nvar unit = require(\"../src/unit.json\");\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nvar type;\nvar keys = Object.keys(unit);\nvar keysss = Object.keys(unit[keys[type]]);\nvar unitkey;\n\nclass secoundInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getfirstUnit = event => {\n      this.setState({\n        firstUnit: event.target.value\n      });\n    };\n\n    this.getsecoundUnit = async event => {\n      await this.setState({\n        secoundUnit: event.target.value\n      });\n      var unitObject = {\n        type1: this.state.type,\n        firstUnit: this.state.firstUnit,\n        secoundUnit: this.state.secoundUnit,\n        value: this.state.value\n      };\n      APIcall.getValueConverted(unitObject).then(res => {\n        this.setState({\n          result: res.data.data\n        });\n      });\n    };\n\n    this.getValue = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {\n      type: props.unit,\n      firstUnit: \"Enter Value\",\n      secoundUnit: \"Enter Value\",\n      value: 0,\n      result: 0\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      type: props.unit\n    });\n  }\n\n  render() {\n    var type = this.state.type;\n    var a = \" \";\n    console.log(unit[keys[type]]); // var a = unit[keys[type]]\n\n    console.log(\"asdfghj\", keysss); // value1 = unitvalue[key[type]][unit1];\n\n    for (var i = 0; i <= keys.length; i++) {\n      console.log(type);\n\n      if (type == i) {\n        unitkey = Object.keys(unit[keys[i]]);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Enter Value :\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getValue,\n      pattern: \"[0-9]\",\n      title: \"Enther Only Numeric Value\",\n      type: \"text\",\n      id: \"output\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"firstUnit\",\n      value: this.state.firstUnit,\n      onChange: this.getfirstUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Select Unit \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, unitkey[0] || a, \" \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, unitkey[1] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, unitkey[2] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, unitkey[3] || a))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Enter Value :\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getValue,\n      pattern: \"[0-9]\",\n      title: \"Enther Only Numeric Value\",\n      type: \"text\",\n      id: \"output\",\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"secoundUnit\",\n      value: this.state.secoundUnit,\n      onChange: this.getsecoundUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Select Unit \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, unitkey[0] || a, \" \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, unitkey[1] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, unitkey[2] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, unitkey[3] || a))));\n  }\n\n}\n\nexport default secoundInput;","map":{"version":3,"sources":["/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/inputunit.js"],"names":["React","Component","require","unit","APIcall","type","keys","Object","keysss","unitkey","secoundInput","constructor","props","getfirstUnit","event","setState","firstUnit","target","value","getsecoundUnit","secoundUnit","unitObject","type1","state","getValueConverted","then","res","result","data","getValue","componentWillReceiveProps","render","a","console","log","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACAC,OAAO,CAAC,YAAD,CAAP;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIG,IAAJ;AACA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,IAAZ,CAAX;AACA,IAAIK,MAAM,GAAGD,MAAM,CAACD,IAAP,CAAYH,IAAI,CAACG,IAAI,CAACD,IAAD,CAAL,CAAhB,CAAb;AAGA,IAAII,OAAJ;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA1B,OAAd;AACD,KAhBkB;;AAAA,SAkBnBC,cAlBmB,GAkBF,MAAML,KAAN,IAAe;AAC9B,YAAM,KAAKC,QAAL,CAAc;AAAEK,QAAAA,WAAW,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd,CAAN;AAEA,UAAIG,UAAU,GAAG;AACfC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWlB,IADH;AAEfW,QAAAA,SAAS,EAAE,KAAKO,KAAL,CAAWP,SAFP;AAGfI,QAAAA,WAAW,EAAE,KAAKG,KAAL,CAAWH,WAHT;AAIfF,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL;AAJH,OAAjB;AAMAd,MAAAA,OAAO,CAACoB,iBAAR,CAA0BH,UAA1B,EAAsCI,IAAtC,CAA2CC,GAAG,IAAI;AAChD,aAAKX,QAAL,CAAc;AAAEY,UAAAA,MAAM,EAAED,GAAG,CAACE,IAAJ,CAASA;AAAnB,SAAd;AACD,OAFD;AAGD,KA9BkB;;AAAA,SAgCnBC,QAhCmB,GAgCRf,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAEJ,KAAK,CAACG,MAAN,CAAaC;AAAtB,OAAd;AACD,KAlCkB;;AAEjB,SAAKK,KAAL,GAAa;AACXlB,MAAAA,IAAI,EAAEO,KAAK,CAACT,IADD;AAEXa,MAAAA,SAAS,EAAE,aAFA;AAGXI,MAAAA,WAAW,EAAE,aAHF;AAIXF,MAAAA,KAAK,EAAE,CAJI;AAKXS,MAAAA,MAAM,EAAE;AALG,KAAb;AAOD;;AACDG,EAAAA,yBAAyB,CAAClB,KAAD,EAAQ;AAC/B,SAAKG,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAEO,KAAK,CAACT;AAAd,KAAd;AACD;;AAuBD4B,EAAAA,MAAM,GAAG;AACP,QAAI1B,IAAI,GAAG,KAAKkB,KAAL,CAAWlB,IAAtB;AACA,QAAI2B,CAAC,GAAG,GAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY/B,IAAI,CAACG,IAAI,CAACD,IAAD,CAAL,CAAhB,EAHO,CAIP;;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB1B,MAAtB,EALO,CAOP;;AAEA,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI7B,IAAI,CAAC8B,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAZ;;AAEA,UAAIA,IAAI,IAAI8B,CAAZ,EAAe;AACb1B,QAAAA,OAAO,GAAGF,MAAM,CAACD,IAAP,CAAYH,IAAI,CAACG,IAAI,CAAC6B,CAAD,CAAL,CAAhB,CAAV;AACD;AACF;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWL,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKW,QAFjB;AAGE,MAAA,OAAO,EAAC,OAHV;AAIE,MAAA,KAAK,EAAC,2BAJR;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,EAAE,EAAC,QANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWP,SAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASJ,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,MANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CATF,CAXF,CADF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWL,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKW,QAFjB;AAGE,MAAA,OAAO,EAAC,OAHV;AAIE,MAAA,KAAK,EAAC,2BAJR;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,EAAE,EAAC,QANL;AAOE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,MAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWH,WAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKD,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASV,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,MANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvB,OAAO,CAAC,CAAD,CAAP,IAAcuB,CAAvB,CATF,CAXF,CAxBF,CADF;AAkDD;;AAvGkC;;AA0GrC,eAAetB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nrequire(\"./unittype\");\nvar unit = require(\"../src/unit.json\");\nvar APIcall = require(\"./unitConverCallAPI\");\nvar type;\nvar keys = Object.keys(unit);\nvar keysss = Object.keys(unit[keys[type]]);\n\n\nvar unitkey;\n\nclass secoundInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: props.unit,\n      firstUnit: \"Enter Value\",\n      secoundUnit: \"Enter Value\",\n      value: 0,\n      result: 0\n    };\n  }\n  componentWillReceiveProps(props) {\n    this.setState({ type: props.unit });\n  }\n\n  getfirstUnit = event => {\n    this.setState({ firstUnit: event.target.value });\n  };\n\n  getsecoundUnit = async event => {\n    await this.setState({ secoundUnit: event.target.value });\n\n    var unitObject = {\n      type1: this.state.type,\n      firstUnit: this.state.firstUnit,\n      secoundUnit: this.state.secoundUnit,\n      value: this.state.value\n    };\n    APIcall.getValueConverted(unitObject).then(res => {\n      this.setState({ result: res.data.data });\n    });\n  };\n\n  getValue = event => {\n    this.setState({ value: event.target.value });\n  };\n  render() {\n    var type = this.state.type;\n    var a = \" \";\n    console.log(unit[keys[type]]);\n    // var a = unit[keys[type]]\n    console.log(\"asdfghj\",keysss);\n    \n    // value1 = unitvalue[key[type]][unit1];\n\n    for (var i = 0; i <= keys.length; i++) {\n      console.log(type);\n      \n      if (type == i) {\n        unitkey = Object.keys(unit[keys[i]]);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <label id=\"userInput\"> Enter Value :</label>\n          <input\n            value={this.state.value}\n            onChange={this.getValue}\n            pattern=\"[0-9]\"\n            title=\"Enther Only Numeric Value\"\n            type=\"text\"\n            id=\"output\"\n          />\n\n          <select\n            id=\"firstUnit\"\n            value={this.state.firstUnit}\n            onChange={this.getfirstUnit}\n          >\n            <option value=\"N/A\">Select Unit </option>\n            <option>{unitkey[0] || a} </option>\n            <option>{unitkey[1] || a}</option>\n            <option>{unitkey[2] || a}</option>\n            <option>{unitkey[3] || a}</option>\n          </select>\n        </div>\n        <div>\n          <label id=\"userInput\"> Enter Value :</label>\n          <input\n            value={this.state.value}\n            onChange={this.getValue}\n            pattern=\"[0-9]\"\n            title=\"Enther Only Numeric Value\"\n            type=\"text\"\n            id=\"output\"\n            value={this.state.result}\n          />\n          <select\n            id=\"secoundUnit\"\n            value={this.state.secoundUnit}\n            onChange={this.getsecoundUnit}\n          >\n            <option value=\"N/A\">Select Unit </option>\n            <option>{unitkey[0] || a} </option>\n            <option>{unitkey[1] || a}</option>\n            <option>{unitkey[2] || a}</option>\n            <option>{unitkey[3] || a}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default secoundInput;\n"]},"metadata":{},"sourceType":"module"}