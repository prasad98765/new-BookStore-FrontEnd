{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/login/SignInForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"../login/singUpAndSign\";\nimport { withRouter } from 'react-router-dom';\n\nvar APICall = require('../../congfiguration/BookStoreCallAPI');\n\nconst emailRegex = RegExp(\"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\");\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n\n    this.login = () => {\n      var loginDetails = {\n        EMAIL: this.state.EMAIL,\n        PASSWORD: this.state.PASSWORD\n      };\n      APICall.login(loginDetails).then(res => {\n        if (res.data.data == true) {\n          re;\n        }\n      });\n    };\n\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value; // let name = target.name;\n\n    const {\n      name\n    } = e.target;\n    let formErrors = { ...this.state.formErrors\n    };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"PASSWORD\":\n        formErrors.PASSWORD = value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit(e) {\n    // e.preventDefault();\n    // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  }\n\n  render() {\n    console.log(this.state.EMAIL);\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"FormFields\" // onSubmit={this.handleSubmit}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.EMAIL.length > 0 ? \"error\" : null,\n      type: \"text\",\n      placeholder: \"Enter your email\",\n      name: \"EMAIL\",\n      value: this.state.EMAIL,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, formErrors.EMAIL.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, formErrors.EMAIL))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.PASSWORD.length > 0 ? \"error\" : null,\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      name: \"PASSWORD\",\n      value: this.state.PASSWORD,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, formErrors.PASSWORD.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, formErrors.PASSWORD))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Sign In\"), \" \", React.createElement(Link, {\n      to: \"/Singn up\",\n      className: \"FormField__Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Create an account\"))));\n  }\n\n}\n\nexport default withRouter(SignInForm);","map":{"version":3,"sources":["/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/login/SignInForm.jsx"],"names":["React","Component","Link","Login","withRouter","APICall","require","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignInForm","constructor","login","loginDetails","EMAIL","state","PASSWORD","then","res","data","re","handleChange","bind","handleSubmit","e","preventDefault","target","value","type","checked","name","test","setState","console","log","error","render","width","backgroundColor","border","color","outline","borderBottom","fontSize","fontWeight","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"../login/singUpAndSign\"\nimport { withRouter } from 'react-router-dom';\nvar APICall = require('../../congfiguration/BookStoreCallAPI')\nconst emailRegex = RegExp(\n  \"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\"\n);\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    // let name = target.name;\n    const { name } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"PASSWORD\":\n        formErrors.PASSWORD =\n          value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  }\n  login =() => {\n    var loginDetails = {\n      EMAIL : this.state.EMAIL,\n      PASSWORD : this.state.PASSWORD\n    }\n    APICall.login(loginDetails).then(res => {\n      if(res.data.data == true){\n        re\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    // e.preventDefault();\n    // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  }\n\n  render() {\n    console.log(this.state.EMAIL);\n    \n    const { formErrors } = this.state;\n    return (\n      <div className=\"FormCenter\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"FormFields\"\n          // onSubmit={this.handleSubmit}\n        >\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"email\">\n              E-Mail Address\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.EMAIL.length > 0 ? \"error\" : null}\n              type=\"text\"\n              placeholder=\"Enter your email\"\n              name=\"EMAIL\"\n              value={this.state.EMAIL}\n              onChange={this.handleChange}\n            />\n            <div className=\"errorMessage\">\n            {formErrors.EMAIL.length > 0 && (\n              <span >{formErrors.EMAIL}</span>\n            )}</div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.PASSWORD.length > 0 ? \"error\" : null}\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              name=\"PASSWORD\"\n              value={this.state.PASSWORD}\n              onChange={this.handleChange}\n            />\n           <div className=\"errorMessage\">\n            {formErrors.PASSWORD.length > 0 && (\n              <span >{formErrors.PASSWORD}</span>\n            )}</div>\n          </div>\n\n          <div className=\"FormField\">\n            <button className=\"FormField__Button mr-20\" onClick = {this.login}>Sign In</button>{\" \"}\n            <Link to=\"/Singn up\" className=\"FormField__Link\">\n              Create an account\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default withRouter(SignInForm);\n"]},"metadata":{},"sourceType":"module"}