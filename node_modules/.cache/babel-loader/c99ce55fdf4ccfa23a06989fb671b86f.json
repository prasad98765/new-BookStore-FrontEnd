{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/login/SignUpForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar login = require('../login/singUpAndSign');\n\nvar APICall = require('../../congfiguration/BookStoreCallAPI');\n\nconst emailRegex = RegExp(\"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\");\nconst mobileRegex = RegExp(\"^[0-9]{2}\\\\s[0-9]{10}$\");\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignUpForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let target = e.target;\n      let value = target.type === \"checkbox\" ? target.checked : target.value;\n      const {\n        name\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"EMAIL\":\n          formErrors.EMAIL = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"PASSWORD\":\n          formErrors.PASSWORD = value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n          break;\n\n        case \"NAME\":\n          formErrors.NAME = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"CONTACT\":\n          formErrors.CONTACT = mobileRegex.test(value) ? \"\" : \"minimum 10 characaters required\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.submit = () => {\n      var adminDetails = {\n        NAME: this.state.NAME,\n        EMAIL: this.state.EMAIL,\n        PASSWORD: this.state.PASSWORD,\n        MOBILENO: this.state.CONTACT\n      };\n      APICall.adminDetails(adminDetails).then(res => {\n        console.log(\"after craete data\", res.data.data);\n      });\n    };\n\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      NAME: null,\n      CONTACT: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\",\n        NAME: \"\",\n        CONTACT: \"\",\n        hasAgreed: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // handleChange(e) {\n  //   let target = e.target;\n  //   let value = target.type === \"checkbox\" ? target.checked : target.value;\n  //   let name = target.name;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // }\n\n\n  handleSubmit(e) {\n    // e.preventDefault();\n    // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.NAME}\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n        contact:${this.state.CONTACT}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"FormCenter\",\n      style: {\n        marginTop: \"3%\",\n        marginLeft: \"30%\",\n        height: 'auto',\n        width: \"45%\",\n        borderStyle: \"outset\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      npValidate: true,\n      className: \"FormFields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      type: \"text\",\n      placeholder: \"Enter your full name\",\n      className: formErrors.NAME.length > 0 ? \"error\" : null,\n      name: \"NAME\",\n      value: this.state.NAME,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, formErrors.NAME.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, formErrors.NAME))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.EMAIL.length > 0 ? \"error\" : null,\n      type: \"text\",\n      id: \"email\" // className=\"FormField__Input\"\n      ,\n      placeholder: \"Enter your email\",\n      name: \"EMAIL\",\n      value: this.state.EMAIL,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, formErrors.EMAIL.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, formErrors.EMAIL))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.PASSWORD.length > 0 ? \"error\" : null,\n      type: \"password\" // className=\"FormField__Input\"\n      ,\n      placeholder: \"Enter your password\",\n      name: \"PASSWORD\",\n      value: this.state.PASSWORD,\n      onChange: this.handleChange,\n      onInput: this.validate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, formErrors.PASSWORD.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, formErrors.PASSWORD))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"phone_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.CONTACT.length > 0 ? \"error\" : null,\n      type: \"text\",\n      id: \"phome_number\" // className=\"FormField__Input\"\n      ,\n      placeholder: \"Enter phone number\",\n      name: \"CONTACT\",\n      value: this.state.CONTACT,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, formErrors.CONTACT.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, formErrors.CONTACT))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__CheckboxLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"FormField__Checkbox\",\n      type: \"checkbox\",\n      name: \"hasAgreed\",\n      value: this.state.hasAgreed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), \" \", \"I agree all statements in\", \" \")), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Sign Up\"), \"\")));\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/admin1/Desktop/addBook/Final ebookStoreUI/eBookStoreUi/src/component/login/SignUpForm.jsx"],"names":["React","Component","Link","login","require","APICall","emailRegex","RegExp","mobileRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignUpForm","constructor","handleChange","e","preventDefault","target","value","type","checked","name","state","EMAIL","test","PASSWORD","NAME","CONTACT","setState","console","log","submit","adminDetails","MOBILENO","then","res","data","hasAgreed","bind","handleSubmit","error","render","marginTop","marginLeft","height","width","borderStyle","backgroundColor","border","color","outline","borderBottom","fontSize","fontWeight","paddingBottom","validate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nvar login = require('../login/singUpAndSign')\nvar APICall = require('../../congfiguration/BookStoreCallAPI')\nconst emailRegex = RegExp(\n  \"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\"\n);\nconst mobileRegex = RegExp(\"^[0-9]{2}\\\\s[0-9]{10}$\");\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignUpForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      NAME: null,\n      CONTACT: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\",\n        NAME: \"\",\n        CONTACT: \"\",\n        hasAgreed: false\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handleChange(e) {\n  //   let target = e.target;\n  //   let value = target.type === \"checkbox\" ? target.checked : target.value;\n  //   let name = target.name;\n\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // }\n\n  handleChange = e => {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"PASSWORD\":\n        formErrors.PASSWORD =\n          value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n      case \"NAME\":\n        formErrors.NAME =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"CONTACT\":\n        formErrors.CONTACT = mobileRegex.test(value)\n          ? \"\"\n          : \"minimum 10 characaters required\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n  handleSubmit(e) {\n    // e.preventDefault();\n    // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.NAME}\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n        contact:${this.state.CONTACT}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  }\n  submit = () => {\n    var adminDetails = {\n      NAME : this.state.NAME,\n      EMAIL : this.state.EMAIL,\n      PASSWORD : this.state.PASSWORD,\n      MOBILENO: this.state.CONTACT\n    }\n    APICall.adminDetails(adminDetails).then(res => {      \n     console.log(\"after craete data\",res.data.data);\n    })\n  }\n  render() {\n    const { formErrors } = this.state;\n    return (\n      <div className=\"FormCenter\" \n      style = {{\n        marginTop : \"3%\",\n        marginLeft : \"30%\",\n        height:'auto',\n        width : \"45%\",\n        borderStyle: \"outset\"\n      }}> \n        <form onSubmit={this.handleSubmit} npValidate className=\"FormFields\">\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"name\">\n              Full Name\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              type=\"text\"\n              placeholder=\"Enter your full name\"\n              className={formErrors.NAME.length > 0 ? \"error\" : null}\n              name=\"NAME\"\n              value={this.state.NAME}\n              onChange={this.handleChange}\n            />\n            <div className=\"errorMessage\">\n              {formErrors.NAME.length > 0 && <span>{formErrors.NAME}</span>}\n            </div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"email\">\n              E-Mail Address\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.EMAIL.length > 0 ? \"error\" : null}\n              type=\"text\"\n              id=\"email\"\n              // className=\"FormField__Input\"\n              placeholder=\"Enter your email\"\n              name=\"EMAIL\"\n              value={this.state.EMAIL}\n              onChange={this.handleChange}\n            />\n            <div className=\"errorMessage\">\n              {formErrors.EMAIL.length > 0 && <span>{formErrors.EMAIL}</span>}\n            </div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.PASSWORD.length > 0 ? \"error\" : null}\n              type=\"password\"\n              // className=\"FormField__Input\"\n              placeholder=\"Enter your password\"\n              name=\"PASSWORD\"\n              value={this.state.PASSWORD}\n              onChange={this.handleChange}\n              onInput={this.validate}\n            />\n            <div className=\"errorMessage\">\n              {formErrors.PASSWORD.length > 0 && (\n                <span>{formErrors.PASSWORD}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"phone_number\">\n              Phone Number\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.CONTACT.length > 0 ? \"error\" : null}\n              type=\"text\"\n              id=\"phome_number\"\n              // className=\"FormField__Input\"\n              placeholder=\"Enter phone number\"\n              name=\"CONTACT\"\n              value={this.state.CONTACT}\n              onChange={this.handleChange}\n            />\n            <div className=\"errorMessage\">\n              {formErrors.CONTACT.length > 0 && (\n                <span>{formErrors.CONTACT}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__CheckboxLabel\">\n              <input\n                className=\"FormField__Checkbox\"\n                type=\"checkbox\"\n                name=\"hasAgreed\"\n                value={this.state.hasAgreed}\n                onChange={this.handleChange}\n              />{\" \"}\n              I agree all statements in{\" \"}\n          \n            </label>\n          </div>\n\n          <div className=\"FormField\">\n            <button className=\"FormField__Button mr-20\" onClick = {this.submit}>Sign Up</button>{\"\"}\n           \n          </div>\n        </form>\n        \n      </div>\n    );\n  }\n}\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}