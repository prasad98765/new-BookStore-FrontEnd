{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/inputunit.js\";\nimport React, { Component } from \"react\";\n\nrequire(\"./unittype\");\n\nvar unit = require(\"../src/unit.json\");\n\nvar APIcall = require(\"./unitConverCallAPI\");\n\nvar keys = Object.keys(unit);\nvar unitkey;\n\nclass secoundInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getfirstUnit = event => {\n      this.setState({\n        firstUnit: event.target.value\n      });\n    };\n\n    this.getsecoundUnit = async event => {\n      await this.setState({\n        secoundUnit: event.target.value\n      });\n      var unitObject = {};\n\n      if (this.state.value1 == 0) {\n        unitObject = {\n          type1: this.state.type,\n          firstUnit: this.state.firstUnit,\n          secoundUnit: this.state.secoundUnit,\n          value: this.state.value2\n        };\n      } else {\n        unitObject = {\n          type1: this.state.type,\n          firstUnit: this.state.firstUnit,\n          secoundUnit: this.state.secoundUnit,\n          value: this.state.value1\n        };\n      }\n\n      APIcall.getValueConverted(unitObject).then(res => {\n        this.setState({\n          result: res.data.data\n        });\n      });\n    };\n\n    this.get1Value = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.get2Value = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {\n      type: props.unit,\n      firstUnit: \"FEET\",\n      secoundUnit: \"FEET\",\n      value1: 0,\n      value2: 0,\n      result: 0\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      type: props.unit\n    });\n  }\n\n  render() {\n    var type = this.state.type;\n    var a = \" \";\n\n    for (var i = 0; i <= keys.length; i++) {\n      if (type == i) {\n        unitkey = Object.keys(unit[keys[i]]);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Enter Value :\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.get1Value,\n      pattern: \"[0-9]\",\n      title: \"Enther Only Numeric Value\",\n      type: \"text\",\n      id: \"output\",\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"firstUnit\",\n      value: this.state.firstUnit,\n      onChange: this.getfirstUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Select Unit \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, unitkey[0] || a, \" \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, unitkey[1] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, unitkey[2] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, unitkey[3] || a))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Enter Value :\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.get2Value,\n      pattern: \"[0-9]\",\n      title: \"Enther Only Numeric Value\",\n      type: \"text\",\n      id: \"output\",\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"secoundUnit\",\n      value: this.state.secoundUnit,\n      onChange: this.getsecoundUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"N/A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Select Unit \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, unitkey[0] || a, \" \"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, unitkey[1] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, unitkey[2] || a), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, unitkey[3] || a))));\n  }\n\n}\n\nexport default secoundInput;","map":{"version":3,"sources":["/home/admin1/Desktop/Prasad/NodeJs/unitmesurement/src/inputunit.js"],"names":["React","Component","require","unit","APIcall","keys","Object","unitkey","secoundInput","constructor","props","getfirstUnit","event","setState","firstUnit","target","value","getsecoundUnit","secoundUnit","unitObject","state","value1","type1","type","value2","getValueConverted","then","res","result","data","get1Value","get2Value","componentWillReceiveProps","render","a","i","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nrequire(\"./unittype\");\nvar unit = require(\"../src/unit.json\");\nvar APIcall = require(\"./unitConverCallAPI\");\n\nvar keys = Object.keys(unit);\nvar unitkey;\n\nclass secoundInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: props.unit,\n      firstUnit: \"FEET\",\n      secoundUnit: \"FEET\",\n      value1: 0,\n      value2: 0,\n      result: 0\n    };\n  }\n  componentWillReceiveProps(props) {\n    this.setState({ type: props.unit });\n  }\n\n  getfirstUnit = event => {\n    this.setState({ firstUnit: event.target.value });\n  };\n\n  getsecoundUnit = async event => {\n    await this.setState({ secoundUnit: event.target.value });\n\n    var unitObject = {};\n    if (this.state.value1 == 0) {\n      unitObject = {\n        type1: this.state.type,\n        firstUnit: this.state.firstUnit,\n        secoundUnit: this.state.secoundUnit,\n        value: this.state.value2\n      };\n    } else {\n      unitObject = {\n        type1: this.state.type,\n        firstUnit: this.state.firstUnit,\n        secoundUnit: this.state.secoundUnit,\n        value: this.state.value1\n      };\n    }\n\n    APIcall.getValueConverted(unitObject).then(res => {\n      this.setState({ result: res.data.data });\n    });\n  };\n\n  get1Value = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  get2Value = event => {\n    this.setState({ value: event.target.value });\n  };\n  render() {\n    var type = this.state.type;\n    var a = \" \";\n\n    for (var i = 0; i <= keys.length; i++) {\n      if (type == i) {\n        unitkey = Object.keys(unit[keys[i]]);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <label id=\"userInput\"> Enter Value :</label>\n          <input\n            value={this.state.value}\n            onChange={this.get1Value}\n            pattern=\"[0-9]\"\n            title=\"Enther Only Numeric Value\"\n            type=\"text\"\n            id=\"output\"\n            value={this.state.result}\n          />\n\n          <select\n            id=\"firstUnit\"\n            value={this.state.firstUnit}\n            onChange={this.getfirstUnit}\n          >\n            <option value=\"N/A\">Select Unit </option>\n            <option>{unitkey[0] || a} </option>\n            <option>{unitkey[1] || a}</option>\n            <option>{unitkey[2] || a}</option>\n            <option>{unitkey[3] || a}</option>\n          </select>\n        </div>\n        <div>\n          <label id=\"userInput\"> Enter Value :</label>\n          <input\n            value={this.state.value}\n            onChange={this.get2Value}\n            pattern=\"[0-9]\"\n            title=\"Enther Only Numeric Value\"\n            type=\"text\"\n            id=\"output\"\n            value={this.state.result}\n          />\n          <select\n            id=\"secoundUnit\"\n            value={this.state.secoundUnit}\n            onChange={this.getsecoundUnit}\n          >\n            <option value=\"N/A\">Select Unit </option>\n            <option>{unitkey[0] || a} </option>\n            <option>{unitkey[1] || a}</option>\n            <option>{unitkey[2] || a}</option>\n            <option>{unitkey[3] || a}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default secoundInput;\n"]},"metadata":{},"sourceType":"module"}