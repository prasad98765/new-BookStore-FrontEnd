{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/new front End/new-BookStore-FrontEnd/src/component/login/SignInForm.jsx\";\nimport React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withRouter } from 'react-router-dom';\n\nvar APICall = require('../../congfiguration/BookStoreCallAPI');\n\nconst emailRegex = RegExp(\"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\");\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n\n    this.login = async () => {\n      console.log(\"abc\");\n      var loginDetails = {\n        EMAIL: this.state.EMAIL,\n        PASSWORD: this.state.PASSWORD\n      };\n      this.setState({\n        open: false\n      });\n      this.setState({\n        setOpen: true\n      });\n      APICall.login(loginDetails).then(res => {\n        if (res.data.data === true) {\n          this.props.history.push({\n            pathname: \"/addBook\"\n          });\n        } else {}\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      },\n      open: true,\n      setOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    const {\n      name\n    } = e.target;\n    let formErrors = { ...this.state.formErrors\n    };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"PASSWORD\":\n        formErrors.PASSWORD = value.length < 5 ? \"minimum 8 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit(e) {\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      this.setState({\n        open: true\n      });\n      this.setState({\n        setOpen: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"FormCenter\",\n      style: {\n        marginTop: \"3%\",\n        marginLeft: \"30%\",\n        height: \"250px\",\n        width: \"45%\",\n        borderStyle: \"outset\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        marginTop: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"E-Mail\"), React.createElement(\"input\", {\n      style: {\n        width: \"300%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.EMAIL.length > 0 ? \"error\" : null,\n      type: \"text\",\n      placeholder: \"Enter your email\",\n      name: \"EMAIL\",\n      value: this.state.EMAIL,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, formErrors.EMAIL.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, formErrors.EMAIL))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        marginTop: \"20%\"\n      },\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      style: {\n        width: \"300%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"black\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10% \"\n      },\n      className: formErrors.PASSWORD.length > 0 ? \"error\" : null,\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      name: \"PASSWORD\",\n      value: this.state.PASSWORD,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, formErrors.PASSWORD.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, formErrors.PASSWORD)))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      style: {\n        marginTop: \"10%\",\n        marginLeft: \"100%\"\n      },\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Sign In\")), this.state.setOpen ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: this.state.open,\n      autoHideDuration: 5000,\n      onClose: this.handleClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"login done\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: this.state.open,\n      autoHideDuration: 1000,\n      onClose: this.handleClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Wrong Password\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(SignInForm);","map":{"version":3,"sources":["/home/admin1/Desktop/new front End/new-BookStore-FrontEnd/src/component/login/SignInForm.jsx"],"names":["React","Component","Snackbar","IconButton","CloseIcon","withRouter","APICall","require","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignInForm","constructor","login","console","log","loginDetails","EMAIL","state","PASSWORD","setState","open","setOpen","then","res","data","props","history","push","pathname","handleClose","event","reason","handleChange","bind","handleSubmit","e","preventDefault","target","value","type","checked","name","test","error","render","marginTop","marginLeft","height","width","borderStyle","backgroundColor","border","color","outline","borderBottom","fontSize","fontWeight","paddingBottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { withRouter } from 'react-router-dom';\nvar APICall = require('../../congfiguration/BookStoreCallAPI')\nconst emailRegex = RegExp(\n  \"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\"\n);\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      },\n      open: true,\n      setOpen: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"PASSWORD\":\n        formErrors.PASSWORD =\n          value.length < 5 ? \"minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  }\n  login = async () => {\n    console.log(\"abc\");\n    \n    var loginDetails = {\n      EMAIL : this.state.EMAIL,\n      PASSWORD : this.state.PASSWORD\n    }\n    this.setState({ open: false });\n    this.setState({ setOpen: true });\n    APICall.login(loginDetails).then(res => {     \n      if(res.data.data === true){\n       \n        this.props.history.push({ pathname: \"/addBook\" });\n      }else{\n      }\n    })\n   \n  }\n\n  handleSubmit(e) {    \n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      this.setState({ open: true });\n      this.setState({ setOpen: false });       \n    }\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n    return (\n      <div className=\"FormCenter\"\n      style={{\n        marginTop: \"3%\",\n        marginLeft: \"30%\",\n        height: \"250px\",\n        width: \"45%\",\n        borderStyle: \"outset\"\n      }}>\n        <div\n          onSubmit={this.handleSubmit}\n          style={{marginTop:\"15%\"}}\n        >\n          <div className=\"FormField\">\n            <label  htmlFor=\"email\">\n              E-Mail\n            </label>\n            <input\n              style={{\n                width: \"300%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.EMAIL.length > 0 ? \"error\" : null}\n              type=\"text\"\n              placeholder=\"Enter your email\"\n              name=\"EMAIL\"\n              value={this.state.EMAIL}\n              onChange={this.handleChange}\n            />\n            <div className=\"errorMessage\">\n            {formErrors.EMAIL.length > 0 && (\n              <span >{formErrors.EMAIL}</span>\n            )}</div>\n          </div>\n\n          <div className=\"FormField\"  >\n            <label style={{marginTop:\"20%\"}} htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              style={{\n                width: \"300%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"black\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10% \"\n              }}\n              className={formErrors.PASSWORD.length > 0 ? \"error\" : null}\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              name=\"PASSWORD\"\n              value={this.state.PASSWORD}\n              onChange={this.handleChange}\n            />\n           <div className=\"errorMessage\">\n            {formErrors.PASSWORD.length > 0 && (\n              <span >{formErrors.PASSWORD}</span>\n            )}</div>\n          </div>\n          </div>\n          <div className=\"FormField\">\n            <button className=\"FormField__Button mr-20\"style={{marginTop:\"10%\",marginLeft:\"100%\"}} onClick = {this.login}>Sign In</button>\n          </div>\n          {this.state.setOpen ? (\n              <div>\n               <Snackbar\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  }}\n                  open={this.state.open}\n                  autoHideDuration={5000}\n                  onClose={this.handleClose}\n                  ContentProps={{\n                    \"aria-describedby\": \"message-id\"\n                  }}\n                  message={\n                    <span id=\"message-id\">\n                    login done\n                     </span>\n                  }\n                  action={[\n                    <IconButton\n                      key=\"close\"\n                      aria-label=\"Close\"\n                      color=\"inherit\"\n                      onClick={this.handleClose}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  ]}\n                />\n              </div>\n            ) : (\n              <div>\n                <Snackbar\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  }}\n                  open={this.state.open}\n                  autoHideDuration={1000}\n                  onClose={this.handleClose}\n                  ContentProps={{\n                    \"aria-describedby\": \"message-id\"\n                  }}\n                  message={\n                    <span id=\"message-id\">\n                      Wrong Password\n                     </span>\n                  }\n                  action={[\n                    <IconButton\n                      key=\"close\"\n                      aria-label=\"Close\"\n                      color=\"inherit\"\n                      onClick={this.handleClose}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  ]}\n                />\n              </div>\n              )}\n      </div>\n    );\n  }\n}\nexport default withRouter(SignInForm)"]},"metadata":{},"sourceType":"module"}